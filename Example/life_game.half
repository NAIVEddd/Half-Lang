
type int_array = array of int

function Index2D (row int, col int, row_size int) : int =
    row * row_size + col
end

function CountLiveNeighbors (arr int_array, row int, col int, row_size int) : int =
    let count = 0
    let idx = 0
    for i = -1 to 1 do
        for j = -1 to 1 do
            let new_row = row + i
            let new_col = col + j
            idx = Index2D(new_row, new_col, row_size)
            count = count + arr[idx]
        end
    end
    idx = Index2D(row, col, row_size)
    count - arr[idx]
end

function IsAlive (arr int_array, row int, col int, row_size int) : int =
    let count = CountLiveNeighbors(arr, row, col, row_size)
    let idx = Index2D(row, col, row_size)
    if arr[idx] == 1 then
        if count < 2 || count > 3 then
            0
        else
            1
        end
    else
        if count == 3 then
            1
        else
            0
        end
    end
end

function UpdateArray(arr int_array, new_arr int_array, row_size int, col_size int) : int =
    row_size = row_size - 1
    col_size = col_size - 1
    for i = 1 to row_size do
        for j = 1 to col_size do
            let idx = Index2D(i, j, row_size)
            new_arr[idx] = IsAlive(arr, i, j, row_size)
        end
    end
    0
end